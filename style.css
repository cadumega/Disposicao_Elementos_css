/*  resetar alguns estilos */
body, ul, li, p {
  margin: 0px;
  padding: 0px;
  list-style: none;
  font-size: 1.2rem;
  font-family: Arial, Helvetica, sans-serif;

}

a {
  text-decoration: none;
  color: white;
}

body {
  margin-bottom: 100px;   /* gap de margin bottom, espaçamento */
}

h1 {
  text-align: center;
  margin-top: 120px;
  color: #1d1e20;
  margin-bottom: -5px;
}

h2 {
  margin-top: 10px;
}

/* Quero as imagens responsivas, o máximo de 100% do container */
img {
  max-width: 100%;
  display: block;
}

.logo {
  text-align: center;
  width: 65px;
  height: 20px;
  filter: invert(80%);
}
.header {
  background: #1d1e20;
  position: fixed;
  width: 100%;
  top: 0;
  /* display: flex;
  flex-wrap: wrap;             /* tela menor, a parte do flexbox vai para baixo */    
  justify-content: space-between;    /* espaço entre os itens */
  padding: 20px;          /* espaçar de um lado e de outro */
  height: 60px;
}

.menu{
  position: fixed;
  padding: 10px;
  margin-right: 30px;
  right: 0;
  top: 20px;
}

.line:after {
	content: "";
	display: block;

	width: 60px;
	height: 3px;
	background: darkorchid;
	margin: 10px auto;
}
.menu li {
  margin-left: 15px; 
  display: inline-block;
}

.menu li a {
  display: inline-block;
  padding: 10px;
  background: darkorchid;
  border-radius: 20px;
  width: 80px;
  text-align: center;
}


/* _________CSS Flexbox 1_________ */
.flex {
  display: flex;            /* Cada item um ao lado do outro */
  flex-wrap: wrap;        /* pode quebrar para ir ajustando */
  max-width: 800px;
  margin: 0 auto;
}

.flex > div {
  flex:1 1 150px;
  margin: 10px;
}

/* _________CSS Grid 1_________ */

.grid1 {
  display: grid;
  /* Qts colunas eu quero q tenha o grid. o fr é unidade fracional, dividir 100%/3 */
  grid-template-columns: 1fr 1fr 1fr;   /* or repeat(3,1fr) */
  max-width: 800px;
  padding: 10px;
  margin: 0 auto;   /* colocar ao centro */
  grid-gap: 10px; /* espaçamento das imagens entre si */
}

.grid1 > div:nth-child(n+4) {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 10px;
  align-items: center;
}

/* Linhas que envolvem os elementos, tenho 5 linhas */
.grid1 > div.anuncio {
  grid-column: 1;
  grid-row: 2/5;
  border-top: 10px solid tomato;
  display: block;
}


/* ___RESPONSIVIDADE___ */
@media (max-width: 600px) {
  .grid1 {
    grid-template-columns: 1fr 1fr;  /* repeat (3,1fr); */
  }
  .grid1 > div:nth-child(n+4) {
    display:block;
  }
  .grid1 > div.anuncio {
    grid-column: auto;
    grid-row:auto;
    order: -1;
  }
}
/* _________CSS Grid 2_________ */

.grid2 {
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-gap: 20px;
  max-width: 800px;
  padding: 10px;
  margin: 0 auto;
}

.sidebar > div {
  margin-bottom: 10px;
}

/* ___RESPONSIVIDADE___ */
@media (max-width: 600px) {
  .grid2 {
    grid-template-columns: 1fr;
  }
  .sidebar {
    display: flex;
    overflow: scroll;
  }
  .sidebar > div {
    flex: 1 0 200px;
    margin: 0 10px;
  }
}

/* _________CSS Grid 3_________ */

.grid3{
display: grid;
grid-template-columns: 1fr 1fr;
grid-gap:20px;
margin:0 auto;
max-width: 800px;
padding: 10px;
}

.grid3-item:nth-child(1) {         /* poderia ter uma class específica do 1° item */
grid-row: 1/3

} 

.grid3-item {
  display:grid;
}

.grid3-item img {
  grid-column: 1;
  grid-row: 1/3;
  align-self: end;    /* alinhar ao final */
}

.grid3-item p {
  background: rgba(0, 0, 0, 0.6);
  padding: 10px;
  color: white;
  grid-column: 1;
  grid-row: 2;
  align-self: end;     /* alinhar ao final */
}
